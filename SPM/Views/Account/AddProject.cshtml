@model SPM.Models.AddProjectViewModel

@{
    ViewBag.Title = "Add Project";
    Layout = "~/Views/Shared/_Account.cshtml";
}

<h2>Add Project</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create a new project.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gradeOutOf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gradeOutOf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gradeOutOf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gradeWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gradeWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gradeWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dueDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.dueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(m => m.SelectClass, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">

            @{
                List<SelectListItem> listItems = ViewData["selectClasses"] as List<SelectListItem>;
            }

            @Html.DropDownListFor(m => m.SelectedValue, listItems, "-- Select Class --")
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
  }
    <div>
        @Html.ActionLink("Back to Dashboard", "Home")
    </div>
             

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
